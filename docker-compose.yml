
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20
    command: ["postgres", "-c", "shared_preload_libraries=vector"]

  redis:
    image: redis:7
    ports: ["6379:6379"]

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn src.app.main:app --host 0.0.0.0 --port 8000 --reload
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    ports: ["8000:8000"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m dramatiq src.worker.tasks
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      - api
      - postgres
      - redis

volumes:
  pgdata:
